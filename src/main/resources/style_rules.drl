package styling;

import styling.entities.ClassResult;
import styling.entities.MethodResult;

import java.util.LinkedList;

global LinkedList OUTPUT_LIST;

rule "class with too much logic"
dialect "mvel"
when
	$class : ClassResult(numberOfLines > 400)
then
	OUTPUT_LIST.add("Rule class with too much logic: " + $class.className);
end

rule "class with too much functionality"
dialect "mvel"
when
	$class : ClassResult(methodResultList.size > 12)
then
	OUTPUT_LIST.add("Rule class with too much functionality: " + $class.className);
end

rule "class with too many dependencies"
dialect "mvel"
when
	$class : ClassResult(numberOfImports > 25)
then
	OUTPUT_LIST.add("Rule class with too many dependencies: " + $class.className);
end

rule "class with too many attributes"
dialect "mvel"
when
	$class : ClassResult(numberOfAttributes > 10)
then
	OUTPUT_LIST.add("Rule class with too many attributes: " + $class.className);
end